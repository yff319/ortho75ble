/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <170>;
};

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N7        &kp KP_N8     &kp KP_N9     &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp BSPC
&kp TAB    &kp Q            &kp W            &kp E            &kp R            &kp T            &kp KP_N4        &kp KP_N5     &kp KP_N6     &kp Y            &kp U            &kp I            &kp O            &kp P            &kp BSPC
&kp ESC    &kp A            &kp S            &kp D            &kp F            &kp G            &kp KP_N1        &kp KP_N2     &kp KP_N3     &kp H            &kp J            &kp K            &kp L            &kp SEMI         &kp ENTER
&kp LSHFT  &kp Z            &kp X            &kp C            &kp V            &kp B            &kp KP_N0        &kp KP_DOT    &kp KP_PLUS   &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH         &kp RSHFT
&to 2      &to 1            &kp LALT         &kp LCTRL        &kp LGUI         &lt 1 SPACE      &kp KP_MULTIPLY  &kp KP_SLASH  &kp KP_MINUS  &lt 1 SPACE      &lt 3 CAPS       &mt UP DOWN      &kp RCTRL        &kp RALT         &mt PG_UP PG_DN
            >;
        };

        layer_1 {
            bindings = <
&none      &none   &none     &none      &none      &none      &none  &none  &none  &none         &none   &none         &none         &none         &none
&kp GRAVE  &kp N1  &kp N2    &kp N3     &kp N4     &kp N5     &none  &none  &none  &kp N6        &kp N7  &kp N8        &kp N9        &kp N0        &kp BSPC
&kp ESC    &none   &none     &none      &kp DOWN   &kp UP     &none  &none  &none  &kp C_VOL_DN  &none   &kp MINUS     &kp EQUAL     &kp SQT       &kp ENTER
&kp LSHFT  &none   &none     &none      &kp PG_DN  &kp PG_UP  &none  &none  &none  &kp C_VOL_UP  &none   &kp LBKT      &kp RBKT      &kp BSLH      &kp RSHFT
&to 0      &to 2   &kp LALT  &kp LCTRL  &kp LGUI   &kp SPACE  &none  &none  &none  &kp SPACE     &none   &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
            >;
        };

        layer_2 {
            bindings = <
&none      &none    &none     &none       &none     &none      &none  &none  &none  &none      &none            &none            &none            &none            &none
&kp TAB    &kp F1   &kp F2    &kp F3      &kp F4    &kp F5     &none  &none  &none  &none      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &kp BSPC
&kp ESC    &kp F6   &kp F7    &kp F8      &kp F9    &kp F10    &none  &none  &none  &none      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS     &kp ENTER
&kp LSHFT  &kp F11  &kp F12   &bt BT_CLR  &none     &none      &none  &none  &none  &none      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MULTIPLY  &kp RSHFT
&to 0      &to 1    &kp LALT  &kp LCTRL   &kp LGUI  &kp SPACE  &none  &none  &none  &kp SPACE  &kp KP_NUMBER_0  &kp KP_DOT       &kp KP_EQUAL     &kp KP_SLASH     &none
            >;
        };

        layer_3 {
            bindings = <
&trans     &trans  &trans    &trans     &trans    &trans     &trans  &trans  &trans  &trans     &trans    &trans    &trans     &trans   &trans
&kp TAB    &trans  &trans    &trans     &trans    &trans     &trans  &trans  &trans  &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp INS  &kp BSPC
&kp ESC    &trans  &trans    &trans     &trans    &trans     &trans  &trans  &trans  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp ENTER
&kp LSHFT  &trans  &trans    &trans     &trans    &trans     &trans  &trans  &trans  &trans     &trans    &trans    &trans     &trans   &kp RSHFT
&to 0      &trans  &kp LALT  &kp LCTRL  &kp LGUI  &kp SPACE  &trans  &trans  &trans  &kp SPACE  &trans    &trans    &trans     &trans   &trans
            >;
        };
    };
};
